// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace apps.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Models.Affectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateEffet")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdCollaborateur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEntite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdFonction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdCollaborateur");

                    b.HasIndex("IdEntite");

                    b.HasIndex("IdFonction");

                    b.ToTable("Affectations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            DateEffet = new DateTime(2020, 6, 15, 2, 56, 10, 442, DateTimeKind.Local).AddTicks(4904),
                            IdCollaborateur = 2,
                            IdEntite = 9,
                            IdFonction = 7
                        },
                        new
                        {
                            Id = 2,
                            Actif = false,
                            DateEffet = new DateTime(2020, 7, 22, 5, 26, 4, 599, DateTimeKind.Local).AddTicks(3387),
                            IdCollaborateur = 4,
                            IdEntite = 10,
                            IdFonction = 10
                        },
                        new
                        {
                            Id = 3,
                            Actif = false,
                            DateEffet = new DateTime(2020, 11, 28, 11, 13, 32, 674, DateTimeKind.Local).AddTicks(6876),
                            IdCollaborateur = 7,
                            IdEntite = 3,
                            IdFonction = 3
                        },
                        new
                        {
                            Id = 4,
                            Actif = false,
                            DateEffet = new DateTime(2020, 1, 26, 9, 30, 45, 474, DateTimeKind.Local).AddTicks(1403),
                            IdCollaborateur = 6,
                            IdEntite = 2,
                            IdFonction = 3
                        },
                        new
                        {
                            Id = 5,
                            Actif = true,
                            DateEffet = new DateTime(2020, 6, 14, 16, 16, 42, 193, DateTimeKind.Local).AddTicks(8612),
                            IdCollaborateur = 6,
                            IdEntite = 10,
                            IdFonction = 10
                        },
                        new
                        {
                            Id = 6,
                            Actif = false,
                            DateEffet = new DateTime(2020, 9, 13, 2, 43, 18, 218, DateTimeKind.Local).AddTicks(8044),
                            IdCollaborateur = 10,
                            IdEntite = 5,
                            IdFonction = 8
                        },
                        new
                        {
                            Id = 7,
                            Actif = true,
                            DateEffet = new DateTime(2020, 3, 24, 15, 11, 0, 783, DateTimeKind.Local).AddTicks(1741),
                            IdCollaborateur = 6,
                            IdEntite = 2,
                            IdFonction = 6
                        },
                        new
                        {
                            Id = 8,
                            Actif = true,
                            DateEffet = new DateTime(2020, 5, 21, 21, 5, 16, 496, DateTimeKind.Local).AddTicks(973),
                            IdCollaborateur = 9,
                            IdEntite = 10,
                            IdFonction = 8
                        },
                        new
                        {
                            Id = 9,
                            Actif = false,
                            DateEffet = new DateTime(2020, 8, 15, 3, 4, 19, 473, DateTimeKind.Local).AddTicks(9675),
                            IdCollaborateur = 9,
                            IdEntite = 9,
                            IdFonction = 8
                        },
                        new
                        {
                            Id = 10,
                            Actif = false,
                            DateEffet = new DateTime(2020, 5, 15, 2, 47, 4, 925, DateTimeKind.Local).AddTicks(1640),
                            IdCollaborateur = 8,
                            IdEntite = 6,
                            IdFonction = 10
                        });
                });

            modelBuilder.Entity("Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodeImmobilisation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdConstructeur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdFamille")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("QteEnStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.Property<int>("TauxAmortissement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniteMesure")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdConstructeur");

                    b.HasIndex("IdFamille");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeImmobilisation = 2,
                            IdConstructeur = 6,
                            IdFamille = 6,
                            Model = "eligendi",
                            Notes = "distinctio",
                            QteEnStock = 8,
                            Reference = "voluptatem",
                            TauxAmortissement = 6,
                            UniteMesure = "reprehenderit"
                        },
                        new
                        {
                            Id = 2,
                            CodeImmobilisation = 5,
                            IdConstructeur = 5,
                            IdFamille = 3,
                            Model = "quod",
                            Notes = "sint",
                            QteEnStock = 1,
                            Reference = "vel",
                            TauxAmortissement = 6,
                            UniteMesure = "quod"
                        },
                        new
                        {
                            Id = 3,
                            CodeImmobilisation = 3,
                            IdConstructeur = 10,
                            IdFamille = 3,
                            Model = "consequatur",
                            Notes = "consequatur",
                            QteEnStock = 7,
                            Reference = "natus",
                            TauxAmortissement = 8,
                            UniteMesure = "sit"
                        },
                        new
                        {
                            Id = 4,
                            CodeImmobilisation = 4,
                            IdConstructeur = 2,
                            IdFamille = 6,
                            Model = "nostrum",
                            Notes = "neque",
                            QteEnStock = 7,
                            Reference = "quis",
                            TauxAmortissement = 6,
                            UniteMesure = "iste"
                        },
                        new
                        {
                            Id = 5,
                            CodeImmobilisation = 5,
                            IdConstructeur = 4,
                            IdFamille = 4,
                            Model = "cupiditate",
                            Notes = "minima",
                            QteEnStock = 4,
                            Reference = "quia",
                            TauxAmortissement = 8,
                            UniteMesure = "eaque"
                        },
                        new
                        {
                            Id = 6,
                            CodeImmobilisation = 7,
                            IdConstructeur = 3,
                            IdFamille = 2,
                            Model = "explicabo",
                            Notes = "quasi",
                            QteEnStock = 1,
                            Reference = "illum",
                            TauxAmortissement = 6,
                            UniteMesure = "omnis"
                        },
                        new
                        {
                            Id = 7,
                            CodeImmobilisation = 1,
                            IdConstructeur = 1,
                            IdFamille = 1,
                            Model = "atque",
                            Notes = "itaque",
                            QteEnStock = 2,
                            Reference = "dicta",
                            TauxAmortissement = 8,
                            UniteMesure = "rem"
                        },
                        new
                        {
                            Id = 8,
                            CodeImmobilisation = 3,
                            IdConstructeur = 10,
                            IdFamille = 4,
                            Model = "eos",
                            Notes = "sed",
                            QteEnStock = 4,
                            Reference = "aut",
                            TauxAmortissement = 10,
                            UniteMesure = "quibusdam"
                        },
                        new
                        {
                            Id = 9,
                            CodeImmobilisation = 7,
                            IdConstructeur = 1,
                            IdFamille = 4,
                            Model = "a",
                            Notes = "aut",
                            QteEnStock = 7,
                            Reference = "reiciendis",
                            TauxAmortissement = 4,
                            UniteMesure = "qui"
                        },
                        new
                        {
                            Id = 10,
                            CodeImmobilisation = 6,
                            IdConstructeur = 8,
                            IdFamille = 10,
                            Model = "voluptate",
                            Notes = "aliquid",
                            QteEnStock = 9,
                            Reference = "nostrum",
                            TauxAmortissement = 6,
                            UniteMesure = "est"
                        });
                });

            modelBuilder.Entity("Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<int>("Poids")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "sed",
                            Poids = 9
                        },
                        new
                        {
                            Id = 2,
                            Nom = "libero",
                            Poids = 8
                        },
                        new
                        {
                            Id = 3,
                            Nom = "deserunt",
                            Poids = 2
                        },
                        new
                        {
                            Id = 4,
                            Nom = "facilis",
                            Poids = 10
                        },
                        new
                        {
                            Id = 5,
                            Nom = "aut",
                            Poids = 3
                        },
                        new
                        {
                            Id = 6,
                            Nom = "harum",
                            Poids = 8
                        },
                        new
                        {
                            Id = 7,
                            Nom = "dolor",
                            Poids = 9
                        },
                        new
                        {
                            Id = 8,
                            Nom = "quae",
                            Poids = 6
                        },
                        new
                        {
                            Id = 9,
                            Nom = "laborum",
                            Poids = 6
                        },
                        new
                        {
                            Id = 10,
                            Nom = "nemo",
                            Poids = 3
                        });
                });

            modelBuilder.Entity("Models.Collaborateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Matricule")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Collaborateurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            Email = "sa@angular.io",
                            ImageUrl = "",
                            Matricule = "iusto",
                            Nom = "voluptas",
                            Prenom = "et"
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            Email = "Aveline26@hotmail.fr",
                            ImageUrl = "",
                            Matricule = "commodi",
                            Nom = "non",
                            Prenom = "soluta"
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            Email = "Herve45@gmail.com",
                            ImageUrl = "",
                            Matricule = "minus",
                            Nom = "alias",
                            Prenom = "dignissimos"
                        },
                        new
                        {
                            Id = 4,
                            Actif = false,
                            Email = "Aymardine.Laurent63@hotmail.fr",
                            ImageUrl = "",
                            Matricule = "autem",
                            Nom = "eos",
                            Prenom = "ratione"
                        },
                        new
                        {
                            Id = 5,
                            Actif = false,
                            Email = "Joseph_Henry@gmail.com",
                            ImageUrl = "",
                            Matricule = "sit",
                            Nom = "et",
                            Prenom = "aut"
                        },
                        new
                        {
                            Id = 6,
                            Actif = false,
                            Email = "Edgard_Nicolas@yahoo.fr",
                            ImageUrl = "",
                            Matricule = "eveniet",
                            Nom = "perspiciatis",
                            Prenom = "nostrum"
                        },
                        new
                        {
                            Id = 7,
                            Actif = false,
                            Email = "Oger_Schneider23@gmail.com",
                            ImageUrl = "",
                            Matricule = "fuga",
                            Nom = "corporis",
                            Prenom = "doloremque"
                        },
                        new
                        {
                            Id = 8,
                            Actif = false,
                            Email = "Coralie_Benoit48@gmail.com",
                            ImageUrl = "",
                            Matricule = "similique",
                            Nom = "et",
                            Prenom = "sunt"
                        },
                        new
                        {
                            Id = 9,
                            Actif = false,
                            Email = "Cecile_Legall46@yahoo.fr",
                            ImageUrl = "",
                            Matricule = "labore",
                            Nom = "omnis",
                            Prenom = "nostrum"
                        },
                        new
                        {
                            Id = 10,
                            Actif = true,
                            Email = "Yolande.Dupuis@yahoo.fr",
                            ImageUrl = "",
                            Matricule = "consequatur",
                            Nom = "dicta",
                            Prenom = "soluta"
                        });
                });

            modelBuilder.Entity("Models.Constructeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Representant")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Constructeurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "id",
                            Representant = "veniam"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "molestiae",
                            Representant = "perspiciatis"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "aut",
                            Representant = "maiores"
                        },
                        new
                        {
                            Id = 4,
                            Nom = "enim",
                            Representant = "rerum"
                        },
                        new
                        {
                            Id = 5,
                            Nom = "consequatur",
                            Representant = "et"
                        },
                        new
                        {
                            Id = 6,
                            Nom = "aut",
                            Representant = "vero"
                        },
                        new
                        {
                            Id = 7,
                            Nom = "esse",
                            Representant = "ad"
                        },
                        new
                        {
                            Id = 8,
                            Nom = "quas",
                            Representant = "nesciunt"
                        },
                        new
                        {
                            Id = 9,
                            Nom = "hic",
                            Representant = "et"
                        },
                        new
                        {
                            Id = 10,
                            Nom = "ullam",
                            Representant = "voluptatem"
                        });
                });

            modelBuilder.Entity("Models.DetailsReception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateMiseEnService")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdArticle")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdFormatEmballage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdReception")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mobilite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroInventaire")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("TEXT");

                    b.Property<int>("PrixUnitaireHT")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Statut")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdArticle");

                    b.HasIndex("IdFormatEmballage");

                    b.HasIndex("IdReception");

                    b.ToTable("DetailsReceptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateMiseEnService = new DateTime(2021, 1, 9, 1, 14, 9, 412, DateTimeKind.Local).AddTicks(7321),
                            IdArticle = 3,
                            IdFormatEmballage = 5,
                            IdReception = 7,
                            Mobilite = "omnis",
                            Notes = "minima",
                            NumeroInventaire = "atque",
                            NumeroSerie = "autem",
                            PrixUnitaireHT = 2,
                            Quantite = 5,
                            Statut = "cumque"
                        },
                        new
                        {
                            Id = 2,
                            DateMiseEnService = new DateTime(2020, 6, 1, 0, 45, 58, 388, DateTimeKind.Local).AddTicks(5547),
                            IdArticle = 3,
                            IdFormatEmballage = 3,
                            IdReception = 10,
                            Mobilite = "magni",
                            Notes = "quas",
                            NumeroInventaire = "nobis",
                            NumeroSerie = "quia",
                            PrixUnitaireHT = 6,
                            Quantite = 5,
                            Statut = "libero"
                        },
                        new
                        {
                            Id = 3,
                            DateMiseEnService = new DateTime(2020, 7, 1, 4, 42, 14, 479, DateTimeKind.Local).AddTicks(6921),
                            IdArticle = 2,
                            IdFormatEmballage = 6,
                            IdReception = 1,
                            Mobilite = "quidem",
                            Notes = "animi",
                            NumeroInventaire = "voluptas",
                            NumeroSerie = "pariatur",
                            PrixUnitaireHT = 8,
                            Quantite = 8,
                            Statut = "dignissimos"
                        },
                        new
                        {
                            Id = 4,
                            DateMiseEnService = new DateTime(2020, 7, 16, 14, 21, 57, 928, DateTimeKind.Local).AddTicks(5832),
                            IdArticle = 6,
                            IdFormatEmballage = 7,
                            IdReception = 7,
                            Mobilite = "officiis",
                            Notes = "quia",
                            NumeroInventaire = "blanditiis",
                            NumeroSerie = "accusamus",
                            PrixUnitaireHT = 8,
                            Quantite = 2,
                            Statut = "porro"
                        },
                        new
                        {
                            Id = 5,
                            DateMiseEnService = new DateTime(2020, 7, 19, 21, 15, 6, 265, DateTimeKind.Local).AddTicks(4790),
                            IdArticle = 7,
                            IdFormatEmballage = 2,
                            IdReception = 2,
                            Mobilite = "quod",
                            Notes = "sit",
                            NumeroInventaire = "ut",
                            NumeroSerie = "perferendis",
                            PrixUnitaireHT = 5,
                            Quantite = 9,
                            Statut = "reprehenderit"
                        },
                        new
                        {
                            Id = 6,
                            DateMiseEnService = new DateTime(2020, 5, 7, 12, 51, 2, 93, DateTimeKind.Local).AddTicks(429),
                            IdArticle = 3,
                            IdFormatEmballage = 3,
                            IdReception = 6,
                            Mobilite = "ipsam",
                            Notes = "quo",
                            NumeroInventaire = "quidem",
                            NumeroSerie = "aperiam",
                            PrixUnitaireHT = 5,
                            Quantite = 10,
                            Statut = "aut"
                        },
                        new
                        {
                            Id = 7,
                            DateMiseEnService = new DateTime(2020, 11, 14, 11, 34, 8, 592, DateTimeKind.Local).AddTicks(4595),
                            IdArticle = 7,
                            IdFormatEmballage = 8,
                            IdReception = 3,
                            Mobilite = "velit",
                            Notes = "voluptatibus",
                            NumeroInventaire = "vel",
                            NumeroSerie = "odio",
                            PrixUnitaireHT = 5,
                            Quantite = 8,
                            Statut = "quos"
                        },
                        new
                        {
                            Id = 8,
                            DateMiseEnService = new DateTime(2020, 11, 5, 16, 28, 24, 671, DateTimeKind.Local).AddTicks(3570),
                            IdArticle = 1,
                            IdFormatEmballage = 10,
                            IdReception = 2,
                            Mobilite = "dolore",
                            Notes = "dicta",
                            NumeroInventaire = "enim",
                            NumeroSerie = "eum",
                            PrixUnitaireHT = 10,
                            Quantite = 6,
                            Statut = "quaerat"
                        },
                        new
                        {
                            Id = 9,
                            DateMiseEnService = new DateTime(2020, 3, 5, 8, 52, 29, 258, DateTimeKind.Local).AddTicks(5499),
                            IdArticle = 10,
                            IdFormatEmballage = 4,
                            IdReception = 10,
                            Mobilite = "assumenda",
                            Notes = "praesentium",
                            NumeroInventaire = "quam",
                            NumeroSerie = "dignissimos",
                            PrixUnitaireHT = 9,
                            Quantite = 9,
                            Statut = "alias"
                        },
                        new
                        {
                            Id = 10,
                            DateMiseEnService = new DateTime(2020, 5, 12, 20, 17, 13, 426, DateTimeKind.Local).AddTicks(2346),
                            IdArticle = 4,
                            IdFormatEmballage = 6,
                            IdReception = 9,
                            Mobilite = "magnam",
                            Notes = "doloribus",
                            NumeroInventaire = "et",
                            NumeroSerie = "deserunt",
                            PrixUnitaireHT = 7,
                            Quantite = 1,
                            Statut = "voluptate"
                        });
                });

            modelBuilder.Entity("Models.Entite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCategorie")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdParent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("IdParent");

                    b.HasIndex("IdSite");

                    b.ToTable("Entites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCategorie = 2,
                            IdSite = 7,
                            Nom = "omnis"
                        },
                        new
                        {
                            Id = 2,
                            IdCategorie = 8,
                            IdParent = 1,
                            IdSite = 7,
                            Nom = "animi"
                        },
                        new
                        {
                            Id = 3,
                            IdCategorie = 2,
                            IdParent = 2,
                            IdSite = 7,
                            Nom = "eaque"
                        },
                        new
                        {
                            Id = 4,
                            IdCategorie = 3,
                            IdParent = 3,
                            IdSite = 9,
                            Nom = "ut"
                        },
                        new
                        {
                            Id = 5,
                            IdCategorie = 9,
                            IdParent = 4,
                            IdSite = 1,
                            Nom = "repudiandae"
                        },
                        new
                        {
                            Id = 6,
                            IdCategorie = 5,
                            IdParent = 5,
                            IdSite = 1,
                            Nom = "aliquid"
                        },
                        new
                        {
                            Id = 7,
                            IdCategorie = 7,
                            IdParent = 6,
                            IdSite = 10,
                            Nom = "et"
                        },
                        new
                        {
                            Id = 8,
                            IdCategorie = 5,
                            IdParent = 7,
                            IdSite = 3,
                            Nom = "voluptas"
                        },
                        new
                        {
                            Id = 9,
                            IdCategorie = 7,
                            IdParent = 8,
                            IdSite = 1,
                            Nom = "pariatur"
                        },
                        new
                        {
                            Id = 10,
                            IdCategorie = 6,
                            IdParent = 9,
                            IdSite = 5,
                            Nom = "sed"
                        });
                });

            modelBuilder.Entity("Models.Famille", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComptagePar")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdParent");

                    b.ToTable("Familles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComptagePar = "voluptatem",
                            Nom = "libero"
                        },
                        new
                        {
                            Id = 2,
                            ComptagePar = "sint",
                            IdParent = 1,
                            Nom = "rerum"
                        },
                        new
                        {
                            Id = 3,
                            ComptagePar = "in",
                            IdParent = 2,
                            Nom = "molestiae"
                        },
                        new
                        {
                            Id = 4,
                            ComptagePar = "in",
                            IdParent = 3,
                            Nom = "dolores"
                        },
                        new
                        {
                            Id = 5,
                            ComptagePar = "eligendi",
                            IdParent = 4,
                            Nom = "expedita"
                        },
                        new
                        {
                            Id = 6,
                            ComptagePar = "harum",
                            IdParent = 5,
                            Nom = "et"
                        },
                        new
                        {
                            Id = 7,
                            ComptagePar = "ut",
                            IdParent = 6,
                            Nom = "quo"
                        },
                        new
                        {
                            Id = 8,
                            ComptagePar = "et",
                            IdParent = 7,
                            Nom = "laboriosam"
                        },
                        new
                        {
                            Id = 9,
                            ComptagePar = "rerum",
                            IdParent = 8,
                            Nom = "et"
                        },
                        new
                        {
                            Id = 10,
                            ComptagePar = "ea",
                            IdParent = 9,
                            Nom = "veritatis"
                        });
                });

            modelBuilder.Entity("Models.Fonction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Decision")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Responsabilite")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Fonctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Decision = true,
                            Nom = "nesciunt",
                            Responsabilite = true
                        },
                        new
                        {
                            Id = 2,
                            Decision = false,
                            Nom = "et",
                            Responsabilite = true
                        },
                        new
                        {
                            Id = 3,
                            Decision = false,
                            Nom = "ad",
                            Responsabilite = false
                        },
                        new
                        {
                            Id = 4,
                            Decision = true,
                            Nom = "ut",
                            Responsabilite = false
                        },
                        new
                        {
                            Id = 5,
                            Decision = true,
                            Nom = "autem",
                            Responsabilite = true
                        },
                        new
                        {
                            Id = 6,
                            Decision = false,
                            Nom = "in",
                            Responsabilite = false
                        },
                        new
                        {
                            Id = 7,
                            Decision = false,
                            Nom = "rerum",
                            Responsabilite = false
                        },
                        new
                        {
                            Id = 8,
                            Decision = true,
                            Nom = "qui",
                            Responsabilite = false
                        },
                        new
                        {
                            Id = 9,
                            Decision = false,
                            Nom = "ex",
                            Responsabilite = true
                        },
                        new
                        {
                            Id = 10,
                            Decision = false,
                            Nom = "quidem",
                            Responsabilite = false
                        });
                });

            modelBuilder.Entity("Models.FormatEmballage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<int>("Valeur")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FormatEmballages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "qui",
                            Valeur = 10
                        },
                        new
                        {
                            Id = 2,
                            Nom = "est",
                            Valeur = 3
                        },
                        new
                        {
                            Id = 3,
                            Nom = "ducimus",
                            Valeur = 2
                        },
                        new
                        {
                            Id = 4,
                            Nom = "dolor",
                            Valeur = 3
                        },
                        new
                        {
                            Id = 5,
                            Nom = "et",
                            Valeur = 3
                        },
                        new
                        {
                            Id = 6,
                            Nom = "eos",
                            Valeur = 3
                        },
                        new
                        {
                            Id = 7,
                            Nom = "qui",
                            Valeur = 7
                        },
                        new
                        {
                            Id = 8,
                            Nom = "amet",
                            Valeur = 3
                        },
                        new
                        {
                            Id = 9,
                            Nom = "veritatis",
                            Valeur = 10
                        },
                        new
                        {
                            Id = 10,
                            Nom = "at",
                            Valeur = 7
                        });
                });

            modelBuilder.Entity("Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Patente")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rib")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Fournisseurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "reiciendis",
                            Email = "sa@angular.io",
                            Ice = "quia",
                            Nom = "commodi",
                            Patente = "placeat",
                            Rc = "molestias",
                            Rib = "qui",
                            Telephone = "est"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "distinctio",
                            Email = "Alban46@yahoo.fr",
                            Ice = "eveniet",
                            Nom = "quo",
                            Patente = "occaecati",
                            Rc = "animi",
                            Rib = "omnis",
                            Telephone = "sed"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "cumque",
                            Email = "Calixte_Jean99@hotmail.fr",
                            Ice = "optio",
                            Nom = "voluptatem",
                            Patente = "aliquam",
                            Rc = "esse",
                            Rib = "neque",
                            Telephone = "vitae"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "magni",
                            Email = "Matthieu.Lacroix@gmail.com",
                            Ice = "ea",
                            Nom = "aut",
                            Patente = "quia",
                            Rc = "qui",
                            Rib = "sed",
                            Telephone = "tempore"
                        },
                        new
                        {
                            Id = 5,
                            Adresse = "reprehenderit",
                            Email = "Alberte_Masson@yahoo.fr",
                            Ice = "quia",
                            Nom = "temporibus",
                            Patente = "magni",
                            Rc = "sit",
                            Rib = "occaecati",
                            Telephone = "saepe"
                        },
                        new
                        {
                            Id = 6,
                            Adresse = "eum",
                            Email = "Alberade.Leroux33@gmail.com",
                            Ice = "beatae",
                            Nom = "architecto",
                            Patente = "esse",
                            Rc = "id",
                            Rib = "quasi",
                            Telephone = "accusamus"
                        },
                        new
                        {
                            Id = 7,
                            Adresse = "et",
                            Email = "Angeline_Bertrand55@hotmail.fr",
                            Ice = "vitae",
                            Nom = "suscipit",
                            Patente = "ipsam",
                            Rc = "provident",
                            Rib = "voluptas",
                            Telephone = "et"
                        },
                        new
                        {
                            Id = 8,
                            Adresse = "mollitia",
                            Email = "Melisande_Lacroix3@gmail.com",
                            Ice = "corporis",
                            Nom = "sed",
                            Patente = "suscipit",
                            Rc = "accusamus",
                            Rib = "et",
                            Telephone = "necessitatibus"
                        },
                        new
                        {
                            Id = 9,
                            Adresse = "illo",
                            Email = "Gislebert_Caron@yahoo.fr",
                            Ice = "odit",
                            Nom = "aut",
                            Patente = "veniam",
                            Rc = "magnam",
                            Rib = "sint",
                            Telephone = "natus"
                        },
                        new
                        {
                            Id = 10,
                            Adresse = "ut",
                            Email = "Maxime11@yahoo.fr",
                            Ice = "ex",
                            Nom = "dolorem",
                            Patente = "magnam",
                            Rc = "dolores",
                            Rib = "eos",
                            Telephone = "aperiam"
                        });
                });

            modelBuilder.Entity("Models.Organisme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Organismes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "autem",
                            Email = "sa@angular.io",
                            Ice = "sit",
                            Nom = "itaque",
                            Telephone = "eaque"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "asperiores",
                            Email = "Armandine.Charles@yahoo.fr",
                            Ice = "dolor",
                            Nom = "autem",
                            Telephone = "vel"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "in",
                            Email = "Cecile.Duval96@hotmail.fr",
                            Ice = "consequuntur",
                            Nom = "commodi",
                            Telephone = "impedit"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "modi",
                            Email = "JeannedArc.Colin@yahoo.fr",
                            Ice = "laudantium",
                            Nom = "nisi",
                            Telephone = "perspiciatis"
                        },
                        new
                        {
                            Id = 5,
                            Adresse = "at",
                            Email = "Caroline57@gmail.com",
                            Ice = "non",
                            Nom = "velit",
                            Telephone = "suscipit"
                        },
                        new
                        {
                            Id = 6,
                            Adresse = "harum",
                            Email = "Primerose_Guillot@yahoo.fr",
                            Ice = "officiis",
                            Nom = "vitae",
                            Telephone = "alias"
                        },
                        new
                        {
                            Id = 7,
                            Adresse = "enim",
                            Email = "Nicolas_Perrin58@gmail.com",
                            Ice = "quia",
                            Nom = "quae",
                            Telephone = "beatae"
                        },
                        new
                        {
                            Id = 8,
                            Adresse = "aut",
                            Email = "Caroline0@hotmail.fr",
                            Ice = "modi",
                            Nom = "dicta",
                            Telephone = "porro"
                        },
                        new
                        {
                            Id = 9,
                            Adresse = "voluptates",
                            Email = "Arielle.Lefebvre94@gmail.com",
                            Ice = "sint",
                            Nom = "tempore",
                            Telephone = "iusto"
                        },
                        new
                        {
                            Id = 10,
                            Adresse = "velit",
                            Email = "Ambroisie.Arnaud18@gmail.com",
                            Ice = "et",
                            Nom = "sed",
                            Telephone = "esse"
                        });
                });

            modelBuilder.Entity("Models.Reception", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateReception")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MontantTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nature")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reference")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdFournisseur");

                    b.ToTable("Receptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateReception = new DateTime(2020, 10, 27, 12, 24, 5, 969, DateTimeKind.Local).AddTicks(5898),
                            IdFournisseur = 7,
                            MontantTotal = 5,
                            Nature = "qui",
                            Reference = "et"
                        },
                        new
                        {
                            Id = 2,
                            DateReception = new DateTime(2020, 8, 11, 0, 28, 7, 443, DateTimeKind.Local).AddTicks(7283),
                            IdFournisseur = 1,
                            MontantTotal = 5,
                            Nature = "rem",
                            Reference = "consequatur"
                        },
                        new
                        {
                            Id = 3,
                            DateReception = new DateTime(2020, 8, 10, 3, 49, 6, 186, DateTimeKind.Local).AddTicks(1013),
                            IdFournisseur = 1,
                            MontantTotal = 6,
                            Nature = "saepe",
                            Reference = "quo"
                        },
                        new
                        {
                            Id = 4,
                            DateReception = new DateTime(2020, 12, 10, 3, 9, 6, 41, DateTimeKind.Local).AddTicks(1704),
                            IdFournisseur = 9,
                            MontantTotal = 1,
                            Nature = "fugit",
                            Reference = "deserunt"
                        },
                        new
                        {
                            Id = 5,
                            DateReception = new DateTime(2020, 3, 5, 23, 20, 50, 186, DateTimeKind.Local).AddTicks(5543),
                            IdFournisseur = 2,
                            MontantTotal = 2,
                            Nature = "et",
                            Reference = "possimus"
                        },
                        new
                        {
                            Id = 6,
                            DateReception = new DateTime(2020, 10, 15, 7, 10, 48, 469, DateTimeKind.Local).AddTicks(5496),
                            IdFournisseur = 8,
                            MontantTotal = 2,
                            Nature = "beatae",
                            Reference = "provident"
                        },
                        new
                        {
                            Id = 7,
                            DateReception = new DateTime(2020, 7, 7, 8, 27, 48, 671, DateTimeKind.Local).AddTicks(3291),
                            IdFournisseur = 10,
                            MontantTotal = 3,
                            Nature = "doloremque",
                            Reference = "magnam"
                        },
                        new
                        {
                            Id = 8,
                            DateReception = new DateTime(2020, 11, 6, 14, 59, 46, 251, DateTimeKind.Local).AddTicks(3653),
                            IdFournisseur = 1,
                            MontantTotal = 10,
                            Nature = "sunt",
                            Reference = "asperiores"
                        },
                        new
                        {
                            Id = 9,
                            DateReception = new DateTime(2020, 8, 11, 17, 3, 4, 171, DateTimeKind.Local).AddTicks(7751),
                            IdFournisseur = 6,
                            MontantTotal = 6,
                            Nature = "voluptates",
                            Reference = "consequuntur"
                        },
                        new
                        {
                            Id = 10,
                            DateReception = new DateTime(2020, 11, 12, 16, 5, 46, 10, DateTimeKind.Local).AddTicks(4602),
                            IdFournisseur = 6,
                            MontantTotal = 5,
                            Nature = "saepe",
                            Reference = "fugiat"
                        });
                });

            modelBuilder.Entity("Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdOrganisme")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdOrganisme");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "aliquid",
                            IdOrganisme = 10,
                            Telephone = "dolorem",
                            Ville = "asperiores"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "molestias",
                            IdOrganisme = 3,
                            Telephone = "quos",
                            Ville = "aspernatur"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "ipsam",
                            IdOrganisme = 9,
                            Telephone = "et",
                            Ville = "et"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "ea",
                            IdOrganisme = 4,
                            Telephone = "nesciunt",
                            Ville = "facilis"
                        },
                        new
                        {
                            Id = 5,
                            Adresse = "perspiciatis",
                            IdOrganisme = 8,
                            Telephone = "sed",
                            Ville = "amet"
                        },
                        new
                        {
                            Id = 6,
                            Adresse = "rerum",
                            IdOrganisme = 7,
                            Telephone = "omnis",
                            Ville = "aliquam"
                        },
                        new
                        {
                            Id = 7,
                            Adresse = "corporis",
                            IdOrganisme = 4,
                            Telephone = "assumenda",
                            Ville = "pariatur"
                        },
                        new
                        {
                            Id = 8,
                            Adresse = "ut",
                            IdOrganisme = 3,
                            Telephone = "et",
                            Ville = "laudantium"
                        },
                        new
                        {
                            Id = 9,
                            Adresse = "quia",
                            IdOrganisme = 1,
                            Telephone = "vitae",
                            Ville = "repudiandae"
                        },
                        new
                        {
                            Id = 10,
                            Adresse = "rerum",
                            IdOrganisme = 1,
                            Telephone = "in",
                            Ville = "itaque"
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profil")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "sa@angular.io",
                            ImageUrl = "",
                            IsActive = true,
                            Nom = "natus",
                            Password = "123",
                            Profil = "non"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Nehemie_Schneider@hotmail.fr",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "sint",
                            Password = "123",
                            Profil = "voluptate"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Theophraste_Charles14@yahoo.fr",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "eos",
                            Password = "123",
                            Profil = "quam"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Ella64@hotmail.fr",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "neque",
                            Password = "123",
                            Profil = "magni"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Josephine_Marty@gmail.com",
                            ImageUrl = "",
                            IsActive = true,
                            Nom = "veniam",
                            Password = "123",
                            Profil = "ullam"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Nathanael_Joly@hotmail.fr",
                            ImageUrl = "",
                            IsActive = true,
                            Nom = "sapiente",
                            Password = "123",
                            Profil = "asperiores"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Aldegonde86@gmail.com",
                            ImageUrl = "",
                            IsActive = true,
                            Nom = "accusamus",
                            Password = "123",
                            Profil = "dolor"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Mayeul_Chevalier@gmail.com",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "aperiam",
                            Password = "123",
                            Profil = "nostrum"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Hector.Thomas18@hotmail.fr",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "autem",
                            Password = "123",
                            Profil = "et"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Fantine77@yahoo.fr",
                            ImageUrl = "",
                            IsActive = false,
                            Nom = "ea",
                            Password = "123",
                            Profil = "in"
                        });
                });

            modelBuilder.Entity("Models.Affectation", b =>
                {
                    b.HasOne("Models.Collaborateur", "Collaborateur")
                        .WithMany("Affectations")
                        .HasForeignKey("IdCollaborateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entite", "Entite")
                        .WithMany("Affectations")
                        .HasForeignKey("IdEntite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Fonction", "Fonction")
                        .WithMany("Affectations")
                        .HasForeignKey("IdFonction")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborateur");

                    b.Navigation("Entite");

                    b.Navigation("Fonction");
                });

            modelBuilder.Entity("Models.Article", b =>
                {
                    b.HasOne("Models.Constructeur", "Constructeur")
                        .WithMany("Articles")
                        .HasForeignKey("IdConstructeur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Famille", "Famille")
                        .WithMany("Articles")
                        .HasForeignKey("IdFamille")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constructeur");

                    b.Navigation("Famille");
                });

            modelBuilder.Entity("Models.DetailsReception", b =>
                {
                    b.HasOne("Models.Article", "Article")
                        .WithMany("DetailsReceptions")
                        .HasForeignKey("IdArticle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.FormatEmballage", "FormatEmballage")
                        .WithMany("DetailsReceptions")
                        .HasForeignKey("IdFormatEmballage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Reception", "Reception")
                        .WithMany("DetailsReceptions")
                        .HasForeignKey("IdReception")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("FormatEmballage");

                    b.Navigation("Reception");
                });

            modelBuilder.Entity("Models.Entite", b =>
                {
                    b.HasOne("Models.Categorie", "Categorie")
                        .WithMany("Entites")
                        .HasForeignKey("IdCategorie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entite", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("IdParent")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Models.Site", "Site")
                        .WithMany("Entites")
                        .HasForeignKey("IdSite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Parent");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Models.Famille", b =>
                {
                    b.HasOne("Models.Famille", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("IdParent")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Models.Reception", b =>
                {
                    b.HasOne("Models.Fournisseur", "Fournisseur")
                        .WithMany("Receptions")
                        .HasForeignKey("IdFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("Models.Site", b =>
                {
                    b.HasOne("Models.Organisme", "Organisme")
                        .WithMany("Sites")
                        .HasForeignKey("IdOrganisme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisme");
                });

            modelBuilder.Entity("Models.Article", b =>
                {
                    b.Navigation("DetailsReceptions");
                });

            modelBuilder.Entity("Models.Categorie", b =>
                {
                    b.Navigation("Entites");
                });

            modelBuilder.Entity("Models.Collaborateur", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("Models.Constructeur", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Models.Entite", b =>
                {
                    b.Navigation("Affectations");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Models.Famille", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Models.Fonction", b =>
                {
                    b.Navigation("Affectations");
                });

            modelBuilder.Entity("Models.FormatEmballage", b =>
                {
                    b.Navigation("DetailsReceptions");
                });

            modelBuilder.Entity("Models.Fournisseur", b =>
                {
                    b.Navigation("Receptions");
                });

            modelBuilder.Entity("Models.Organisme", b =>
                {
                    b.Navigation("Sites");
                });

            modelBuilder.Entity("Models.Reception", b =>
                {
                    b.Navigation("DetailsReceptions");
                });

            modelBuilder.Entity("Models.Site", b =>
                {
                    b.Navigation("Entites");
                });
#pragma warning restore 612, 618
        }
    }
}
